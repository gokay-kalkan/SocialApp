@page "/register"
@using BlazorServerUI.Services.RegisterServices
@using BlazorServerUI.Services.UserServices
@using Blazored.LocalStorage
@using BlazorServerUI.Data.UserDtos
@inject RegisterService RegisterService
@inject UserService UserService
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+DKs9j6t5NMF6W4a1LFsVbS3Z4Bwp" crossorigin="anonymous">

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <h3>Kayıt Ol</h3>
            <EditForm Model="registerDto" OnValidSubmit="HandleRegister">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="username" class="form-label">Username:</label>
                    <InputText id="username" class="form-control" @bind-Value="registerDto.Username" />
                </div>
                <div class="mb-3">
                    <label for="email" class="form-label">Email:</label>
                    <InputText id="email" class="form-control" @bind-Value="registerDto.Email" type="email" />
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Password:</label>
                    <InputText id="password" class="form-control" @bind-Value="registerDto.Password" type="password" />
                </div>
                <div class="mb-3">
                    <label for="name" class="form-label">Name:</label>
                    <InputText id="name" class="form-control" @bind-Value="registerDto.Name" />
                </div>
                <div class="mb-3">
                    <label for="surname" class="form-label">Surname:</label>
                    <InputText id="surname" class="form-control" @bind-Value="registerDto.Surname" />
                </div>
                <div class="mb-3">
                    <label for="birthdate" class="form-label">Birth Date:</label>
                    <InputDate id="birthdate" class="form-control" @bind-Value="registerDto.BirthDate" />
                </div>
                <div class="mb-3">
                    <label for="gender" class="form-label">Gender:</label>
                    <InputSelect id="gender" class="form-control" @bind-Value="registerDto.Gender">
                        <option value="">Select Gender</option>
                        <option value="1">Male</option>
                        <option value="2">Female</option>
                    </InputSelect>
                </div>
                <div class="mb-3">
                    <label for="profilepicture" class="form-label">Profile:</label>
                    <InputText id="profilepicture" class="form-control" @bind-Value="registerDto.ProfilePicture" />
                </div>
                <button type="submit" class="btn btn-primary w-100">Register</button>
            </EditForm>
        </div>
    </div>
</div>
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}

@code {
    private RegisterDto registerDto = new RegisterDto();
    private string errorMessage;

    private async Task HandleRegister()
    {
        try
        {
            await RegisterService.RegisterUserAsync(registerDto);


            // Kayıt başarılı olduğunda kullanıcıyı ana sayfaya yönlendir
            NavigationManager.NavigateTo("/login");
        }
        catch (Exception ex)
        {
            // Hata durumunda bir mesaj göster
            errorMessage = "Kayıt başarısız. Lütfen bilgilerinizi kontrol edin.";
        }
    }
}
